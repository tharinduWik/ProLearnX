{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\PAF Project\\\\ProLearnXGit\\\\ProLearnX\\\\frontend\\\\src\\\\components\\\\posts\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Card, Button, Form, Alert } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { AuthContext } from '../../context/AuthContext';\nimport { postService } from '../../services/api';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload, faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { storage } from '../../firebase/config';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreatePost = () => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [previews, setPreviews] = useState([]);\n  const [error, setError] = useState('');\n  const [isVideo, setIsVideo] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const validationSchema = Yup.object({\n    description: Yup.string().required('Description is required'),\n    files: Yup.mixed().required('At least one file is required').test('fileCount', 'Maximum 3 files are allowed', value => value && value.length <= 3).test('fileSize', 'File size is too large', value => {\n      if (!value) return true;\n      return Array.from(value).every(file => file.size <= 50 * 1024 * 1024); // 50MB max\n    }).test('fileType', 'Unsupported file type', value => {\n      if (!value) return true;\n      return Array.from(value).every(file => file.type.startsWith('image/') || file.type.startsWith('video/'));\n    })\n  });\n\n  // Function to handle direct Firebase Storage upload\n  const uploadFileToFirebase = async file => {\n    try {\n      const mediaName = `post_${currentUser.id}_${Date.now()}_${file.name.replace(/[^a-zA-Z0-9._-]/g, '_')}`;\n      const storageRef = ref(storage, `postMedia/${mediaName}`);\n      await uploadBytes(storageRef, file);\n      const downloadUrl = await getDownloadURL(storageRef);\n      console.log('File uploaded successfully to Firebase:', downloadUrl);\n      return downloadUrl;\n    } catch (error) {\n      console.error('Firebase upload error:', error);\n      throw error;\n    }\n  };\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    setError('');\n    setIsUploading(true);\n    try {\n      // First, upload files directly to Firebase Storage\n      const mediaUrls = [];\n      const mediaFiles = Array.from(values.files);\n      toast.info('Uploading files to storage...', {\n        autoClose: false,\n        toastId: 'uploading'\n      });\n\n      // Upload each file to Firebase Storage\n      for (const file of mediaFiles) {\n        const url = await uploadFileToFirebase(file);\n        mediaUrls.push(url);\n      }\n      toast.dismiss('uploading');\n      toast.success('Files uploaded successfully!');\n\n      // Now create the post with the URLs instead of files\n      const postData = {\n        userId: currentUser.id,\n        description: values.description,\n        isVideo: isVideo,\n        mediaUrls: mediaUrls\n      };\n\n      // Send the post data to the backend\n      await postService.createPostWithUrls(postData);\n      toast.success('Post created successfully!');\n      navigate('/');\n    } catch (err) {\n      var _err$response;\n      console.error('Post creation error:', err);\n\n      // Handle Firebase Storage errors\n      if (err.code && err.code.startsWith('storage/')) {\n        setError(`Firebase Storage error: ${err.message}`);\n        toast.error('Storage upload failed');\n      } else if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 403) {\n        // Handle API permission errors\n        setError('Access denied. You may not have permission to perform this action.');\n        toast.error('Access denied');\n      } else {\n        var _err$response2, _err$response2$data;\n        // Handle other errors\n        setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message || 'Failed to create post. Please try again.');\n        toast.error('Failed to create post');\n      }\n    } finally {\n      setIsUploading(false);\n      setSubmitting(false);\n    }\n  };\n  const handleFileChange = (event, setFieldValue) => {\n    const files = event.currentTarget.files;\n\n    // Check if any file is a video\n    const videoExists = Array.from(files).some(file => file.type.startsWith('video/'));\n    setIsVideo(videoExists);\n\n    // Validate file count\n    if (files.length > 3) {\n      toast.error('You can only upload a maximum of 3 files');\n      return;\n    }\n\n    // Validate if multiple videos are selected\n    if (videoExists && Array.from(files).filter(file => file.type.startsWith('video/')).length > 1) {\n      toast.error('You can only upload one video');\n      return;\n    }\n    setFieldValue('files', files);\n\n    // Generate previews\n    const fileArray = Array.from(files).map(file => ({\n      file,\n      preview: URL.createObjectURL(file),\n      type: file.type.startsWith('video/') ? 'video' : 'image'\n    }));\n    setPreviews(fileArray);\n\n    // Check video duration when video is selected\n    if (videoExists) {\n      const videoFile = Array.from(files).find(file => file.type.startsWith('video/'));\n      const videoElement = document.createElement('video');\n      videoElement.preload = 'metadata';\n      videoElement.onloadedmetadata = () => {\n        URL.revokeObjectURL(videoElement.src);\n        if (videoElement.duration > 30) {\n          toast.error('Video must be less than 30 seconds');\n          setFieldValue('files', null);\n          setPreviews([]);\n        }\n      };\n      videoElement.src = URL.createObjectURL(videoFile);\n    }\n  };\n  const removeFile = (index, setFieldValue, values) => {\n    const newFiles = Array.from(values.files).filter((_, i) => i !== index);\n\n    // Update isVideo flag\n    const newIsVideo = newFiles.some(file => file.type.startsWith('video/'));\n    setIsVideo(newIsVideo);\n\n    // Create a new FileList-like object\n    const dataTransfer = new DataTransfer();\n    newFiles.forEach(file => {\n      dataTransfer.items.add(file);\n    });\n    setFieldValue('files', dataTransfer.files);\n\n    // Update previews\n    setPreviews(previews.filter((_, i) => i !== index));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"shadow\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"bg-primary text-white\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Create New Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Error:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 22\n                }, this), \" \", error]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this), error.includes('Storage permission denied') && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-2 mb-0\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"This is likely a server-side configuration issue with Firebase Storage permissions. Try again later or reach out to technical support.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: {\n                description: '',\n                files: null\n              },\n              validationSchema: validationSchema,\n              onSubmit: handleSubmit,\n              children: ({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                values,\n                touched,\n                errors,\n                isSubmitting,\n                setFieldValue\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                noValidate: true,\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 3,\n                    name: \"description\",\n                    value: values.description,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.description && !!errors.description,\n                    placeholder: \"Share your knowledge or learning experience...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 245,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Upload Media (Max 3 files, images or videos)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"file\",\n                    name: \"files\",\n                    onChange: e => handleFileChange(e, setFieldValue),\n                    onBlur: handleBlur,\n                    isInvalid: touched.files && !!errors.files,\n                    accept: \"image/*,video/*\",\n                    multiple: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.files\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                    className: \"text-muted\",\n                    children: \"You can upload up to 3 images, or 1 video (max 30 seconds)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 21\n                }, this), previews.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"Media Preview\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 271,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex flex-wrap gap-2\",\n                    children: previews.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"position-relative\",\n                      children: [file.type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: file.preview,\n                        alt: `Preview ${index}`,\n                        style: {\n                          width: '150px',\n                          height: '150px',\n                          objectFit: 'cover'\n                        },\n                        className: \"rounded\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 276,\n                        columnNumber: 33\n                      }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n                        src: file.preview,\n                        style: {\n                          width: '150px',\n                          height: '150px',\n                          objectFit: 'cover'\n                        },\n                        className: \"rounded\",\n                        controls: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 283,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"danger\",\n                        size: \"sm\",\n                        className: \"position-absolute top-0 end-0\",\n                        onClick: () => removeFile(index, setFieldValue, values),\n                        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                          icon: faTrash\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 296,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 290,\n                        columnNumber: 31\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-grid\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    type: \"submit\",\n                    disabled: isSubmitting || isUploading,\n                    className: \"mt-3\",\n                    children: isSubmitting || isUploading ? 'Creating...' : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faUpload,\n                        className: \"me-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 313,\n                        columnNumber: 29\n                      }, this), \"Create Post\"]\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"rrIjqiUzHe5zc2rU+2S5vABuIJM=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","Container","Row","Col","Card","Button","Form","Alert","Formik","Yup","toast","AuthContext","postService","FontAwesomeIcon","faUpload","faTrash","storage","ref","uploadBytes","getDownloadURL","jsxDEV","_jsxDEV","Fragment","_Fragment","CreatePost","_s","currentUser","navigate","previews","setPreviews","error","setError","isVideo","setIsVideo","isUploading","setIsUploading","validationSchema","object","description","string","required","files","mixed","test","value","length","Array","from","every","file","size","type","startsWith","uploadFileToFirebase","mediaName","id","Date","now","name","replace","storageRef","downloadUrl","console","log","handleSubmit","values","setSubmitting","mediaUrls","mediaFiles","info","autoClose","toastId","url","push","dismiss","success","postData","userId","createPostWithUrls","err","_err$response","code","message","response","status","_err$response2","_err$response2$data","data","handleFileChange","event","setFieldValue","currentTarget","videoExists","some","filter","fileArray","map","preview","URL","createObjectURL","videoFile","find","videoElement","document","createElement","preload","onloadedmetadata","revokeObjectURL","src","duration","removeFile","index","newFiles","_","i","newIsVideo","dataTransfer","DataTransfer","forEach","items","add","children","className","md","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","variant","includes","initialValues","onSubmit","handleChange","handleBlur","touched","errors","isSubmitting","noValidate","Group","Label","Control","as","rows","onChange","onBlur","isInvalid","placeholder","Feedback","e","accept","multiple","Text","alt","style","width","height","objectFit","controls","onClick","icon","disabled","_c","$RefreshReg$"],"sources":["D:/Projects/PAF Project/ProLearnXGit/ProLearnX/frontend/src/components/posts/CreatePost.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Row, Col, Card, Button, Form, Alert } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { postService } from '../../services/api';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUpload, faTrash } from '@fortawesome/free-solid-svg-icons';\r\nimport { storage } from '../../firebase/config';\r\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\r\n\r\nconst CreatePost = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const [previews, setPreviews] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [isVideo, setIsVideo] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n\r\n  const validationSchema = Yup.object({\r\n    description: Yup.string().required('Description is required'),\r\n    files: Yup.mixed()\r\n      .required('At least one file is required')\r\n      .test(\r\n        'fileCount',\r\n        'Maximum 3 files are allowed',\r\n        value => value && value.length <= 3\r\n      )\r\n      .test(\r\n        'fileSize',\r\n        'File size is too large',\r\n        value => {\r\n          if (!value) return true;\r\n          return Array.from(value).every(file => file.size <= 50 * 1024 * 1024); // 50MB max\r\n        }\r\n      )\r\n      .test(\r\n        'fileType',\r\n        'Unsupported file type',\r\n        value => {\r\n          if (!value) return true;\r\n          return Array.from(value).every(\r\n            file => file.type.startsWith('image/') || file.type.startsWith('video/')\r\n          );\r\n        }\r\n      )\r\n  });\r\n\r\n  // Function to handle direct Firebase Storage upload\r\n  const uploadFileToFirebase = async (file) => {\r\n    try {\r\n      const mediaName = `post_${currentUser.id}_${Date.now()}_${file.name.replace(/[^a-zA-Z0-9._-]/g, '_')}`;\r\n      const storageRef = ref(storage, `postMedia/${mediaName}`);\r\n      \r\n      await uploadBytes(storageRef, file);\r\n      const downloadUrl = await getDownloadURL(storageRef);\r\n      \r\n      console.log('File uploaded successfully to Firebase:', downloadUrl);\r\n      return downloadUrl;\r\n    } catch (error) {\r\n      console.error('Firebase upload error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values, { setSubmitting }) => {\r\n    setError('');\r\n    setIsUploading(true);\r\n    \r\n    try {\r\n      // First, upload files directly to Firebase Storage\r\n      const mediaUrls = [];\r\n      const mediaFiles = Array.from(values.files);\r\n      \r\n      toast.info('Uploading files to storage...', { autoClose: false, toastId: 'uploading' });\r\n      \r\n      // Upload each file to Firebase Storage\r\n      for (const file of mediaFiles) {\r\n        const url = await uploadFileToFirebase(file);\r\n        mediaUrls.push(url);\r\n      }\r\n      \r\n      toast.dismiss('uploading');\r\n      toast.success('Files uploaded successfully!');\r\n      \r\n      // Now create the post with the URLs instead of files\r\n      const postData = {\r\n        userId: currentUser.id,\r\n        description: values.description,\r\n        isVideo: isVideo,\r\n        mediaUrls: mediaUrls\r\n      };\r\n      \r\n      // Send the post data to the backend\r\n      await postService.createPostWithUrls(postData);\r\n      toast.success('Post created successfully!');\r\n      navigate('/');\r\n    } catch (err) {\r\n      console.error('Post creation error:', err);\r\n      \r\n      // Handle Firebase Storage errors\r\n      if (err.code && err.code.startsWith('storage/')) {\r\n        setError(`Firebase Storage error: ${err.message}`);\r\n        toast.error('Storage upload failed');\r\n      } else if (err.response?.status === 403) {\r\n        // Handle API permission errors\r\n        setError(\r\n          'Access denied. You may not have permission to perform this action.'\r\n        );\r\n        toast.error('Access denied');\r\n      } else {\r\n        // Handle other errors\r\n        setError(\r\n          err.response?.data?.message || \r\n          err.message || \r\n          'Failed to create post. Please try again.'\r\n        );\r\n        toast.error('Failed to create post');\r\n      }\r\n    } finally {\r\n      setIsUploading(false);\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (event, setFieldValue) => {\r\n    const files = event.currentTarget.files;\r\n    \r\n    // Check if any file is a video\r\n    const videoExists = Array.from(files).some(file => file.type.startsWith('video/'));\r\n    setIsVideo(videoExists);\r\n    \r\n    // Validate file count\r\n    if (files.length > 3) {\r\n      toast.error('You can only upload a maximum of 3 files');\r\n      return;\r\n    }\r\n    \r\n    // Validate if multiple videos are selected\r\n    if (videoExists && Array.from(files).filter(file => file.type.startsWith('video/')).length > 1) {\r\n      toast.error('You can only upload one video');\r\n      return;\r\n    }\r\n    \r\n    setFieldValue('files', files);\r\n    \r\n    // Generate previews\r\n    const fileArray = Array.from(files).map(file => ({\r\n      file,\r\n      preview: URL.createObjectURL(file),\r\n      type: file.type.startsWith('video/') ? 'video' : 'image'\r\n    }));\r\n    \r\n    setPreviews(fileArray);\r\n    \r\n    // Check video duration when video is selected\r\n    if (videoExists) {\r\n      const videoFile = Array.from(files).find(file => file.type.startsWith('video/'));\r\n      const videoElement = document.createElement('video');\r\n      videoElement.preload = 'metadata';\r\n      \r\n      videoElement.onloadedmetadata = () => {\r\n        URL.revokeObjectURL(videoElement.src);\r\n        if (videoElement.duration > 30) {\r\n          toast.error('Video must be less than 30 seconds');\r\n          setFieldValue('files', null);\r\n          setPreviews([]);\r\n        }\r\n      };\r\n      \r\n      videoElement.src = URL.createObjectURL(videoFile);\r\n    }\r\n  };\r\n  \r\n  const removeFile = (index, setFieldValue, values) => {\r\n    const newFiles = Array.from(values.files).filter((_, i) => i !== index);\r\n    \r\n    // Update isVideo flag\r\n    const newIsVideo = newFiles.some(file => file.type.startsWith('video/'));\r\n    setIsVideo(newIsVideo);\r\n    \r\n    // Create a new FileList-like object\r\n    const dataTransfer = new DataTransfer();\r\n    newFiles.forEach(file => {\r\n      dataTransfer.items.add(file);\r\n    });\r\n    \r\n    setFieldValue('files', dataTransfer.files);\r\n    \r\n    // Update previews\r\n    setPreviews(previews.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={8}>\r\n          <Card className=\"shadow\">\r\n            <Card.Header className=\"bg-primary text-white\">\r\n              <h3>Create New Post</h3>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {error && (\r\n                <Alert variant=\"danger\">\r\n                  <p><strong>Error:</strong> {error}</p>\r\n                  {error.includes('Storage permission denied') && (\r\n                    <p className=\"mt-2 mb-0\">\r\n                      <small>This is likely a server-side configuration issue with Firebase Storage permissions.\r\n                      Try again later or reach out to technical support.</small>\r\n                    </p>\r\n                  )}\r\n                </Alert>\r\n              )}\r\n              \r\n              <Formik\r\n                initialValues={{ description: '', files: null }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={handleSubmit}\r\n              >\r\n                {({\r\n                  handleSubmit,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  values,\r\n                  touched,\r\n                  errors,\r\n                  isSubmitting,\r\n                  setFieldValue\r\n                }) => (\r\n                  <Form noValidate onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>Description</Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                        name=\"description\"\r\n                        value={values.description}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isInvalid={touched.description && !!errors.description}\r\n                        placeholder=\"Share your knowledge or learning experience...\"\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.description}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>Upload Media (Max 3 files, images or videos)</Form.Label>\r\n                      <Form.Control\r\n                        type=\"file\"\r\n                        name=\"files\"\r\n                        onChange={(e) => handleFileChange(e, setFieldValue)}\r\n                        onBlur={handleBlur}\r\n                        isInvalid={touched.files && !!errors.files}\r\n                        accept=\"image/*,video/*\"\r\n                        multiple\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.files}\r\n                      </Form.Control.Feedback>\r\n                      <Form.Text className=\"text-muted\">\r\n                        You can upload up to 3 images, or 1 video (max 30 seconds)\r\n                      </Form.Text>\r\n                    </Form.Group>\r\n                    \r\n                    {previews.length > 0 && (\r\n                      <div className=\"mb-3\">\r\n                        <h5>Media Preview</h5>\r\n                        <div className=\"d-flex flex-wrap gap-2\">\r\n                          {previews.map((file, index) => (\r\n                            <div key={index} className=\"position-relative\">\r\n                              {file.type === 'image' ? (\r\n                                <img \r\n                                  src={file.preview} \r\n                                  alt={`Preview ${index}`} \r\n                                  style={{ width: '150px', height: '150px', objectFit: 'cover' }}\r\n                                  className=\"rounded\"\r\n                                />\r\n                              ) : (\r\n                                <video \r\n                                  src={file.preview} \r\n                                  style={{ width: '150px', height: '150px', objectFit: 'cover' }}\r\n                                  className=\"rounded\"\r\n                                  controls\r\n                                />\r\n                              )}\r\n                              <Button \r\n                                variant=\"danger\" \r\n                                size=\"sm\" \r\n                                className=\"position-absolute top-0 end-0\"\r\n                                onClick={() => removeFile(index, setFieldValue, values)}\r\n                              >\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                              </Button>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    \r\n                    <div className=\"d-grid\">\r\n                      <Button \r\n                        variant=\"primary\" \r\n                        type=\"submit\" \r\n                        disabled={isSubmitting || isUploading}\r\n                        className=\"mt-3\"\r\n                      >\r\n                        {isSubmitting || isUploading ? 'Creating...' : (\r\n                          <>\r\n                            <FontAwesomeIcon icon={faUpload} className=\"me-2\" />\r\n                            Create Post\r\n                          </>\r\n                        )}\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreatePost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}