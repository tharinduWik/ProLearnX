{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\PAF Project\\\\ProLearnXGit3\\\\ProLearnX\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { userService } from '../services/api';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Load user from localStorage on initial render\n  useEffect(() => {\n    const user = localStorage.getItem('user');\n    if (user) {\n      setCurrentUser(JSON.parse(user));\n    }\n    setLoading(false);\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      const response = await userService.login(email, password);\n      const user = response.data;\n      localStorage.setItem('user', JSON.stringify(user));\n      setCurrentUser(user);\n      return user;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Register function\n  const register = async userData => {\n    try {\n      const response = await userService.register(userData);\n      return response.data;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    localStorage.removeItem('user');\n    setCurrentUser(null);\n    toast.info('You have been logged out');\n  };\n  const value = {\n    currentUser,\n    login,\n    register,\n    logout,\n    loading\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"+Bt7EujFHjK6mRV3YX1iAtSqXvQ=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","userService","toast","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","currentUser","setCurrentUser","loading","setLoading","user","localStorage","getItem","JSON","parse","login","email","password","response","data","setItem","stringify","error","register","userData","logout","removeItem","info","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Projects/PAF Project/ProLearnXGit3/ProLearnX/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\nimport { userService } from '../services/api';\r\nimport { toast } from 'react-toastify';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [currentUser, setCurrentUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  // Load user from localStorage on initial render\r\n  useEffect(() => {\r\n    const user = localStorage.getItem('user');\r\n    if (user) {\r\n      setCurrentUser(JSON.parse(user));\r\n    }\r\n    setLoading(false);\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      const response = await userService.login(email, password);\r\n      const user = response.data;\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      setCurrentUser(user);\r\n      return user;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (userData) => {\r\n    try {\r\n      const response = await userService.register(userData);\r\n      return response.data;\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    localStorage.removeItem('user');\r\n    setCurrentUser(null);\r\n    toast.info('You have been logged out');\r\n  };\r\n\r\n  const value = {\r\n    currentUser,\r\n    login,\r\n    register,\r\n    logout,\r\n    loading\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACAC,SAAS,CAAC,MAAM;IACd,MAAMa,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,IAAIF,IAAI,EAAE;MACRH,cAAc,CAACM,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAAC;IAClC;IACAD,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMM,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACvC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMpB,WAAW,CAACiB,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;MACzD,MAAMP,IAAI,GAAGQ,QAAQ,CAACC,IAAI;MAC1BR,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEP,IAAI,CAACQ,SAAS,CAACX,IAAI,CAAC,CAAC;MAClDH,cAAc,CAACG,IAAI,CAAC;MACpB,OAAOA,IAAI;IACb,CAAC,CAAC,OAAOY,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC,IAAI;MACF,MAAMN,QAAQ,GAAG,MAAMpB,WAAW,CAACyB,QAAQ,CAACC,QAAQ,CAAC;MACrD,OAAON,QAAQ,CAACC,IAAI;IACtB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;;EAED;EACA,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBd,YAAY,CAACe,UAAU,CAAC,MAAM,CAAC;IAC/BnB,cAAc,CAAC,IAAI,CAAC;IACpBR,KAAK,CAAC4B,IAAI,CAAC,0BAA0B,CAAC;EACxC,CAAC;EAED,MAAMC,KAAK,GAAG;IACZtB,WAAW;IACXS,KAAK;IACLQ,QAAQ;IACRE,MAAM;IACNjB;EACF,CAAC;EAED,oBACEP,OAAA,CAACC,WAAW,CAAC2B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAxB,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAC5B,EAAA,CAxDWF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}