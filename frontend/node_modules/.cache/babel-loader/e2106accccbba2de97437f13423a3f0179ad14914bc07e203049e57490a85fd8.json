{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api';\n\n// Create axios instance with base URL\nconst apiClient = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add request interceptor to include auth token if available\napiClient.interceptors.request.use(config => {\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  if (user && user.token) {\n    config.headers.Authorization = `Bearer ${user.token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport const userService = {\n  register: userData => apiClient.post('/users/register', userData),\n  login: (email, password) => apiClient.post(`/users/login?email=${encodeURIComponent(email)}&password=${encodeURIComponent(password)}`),\n  getUser: userId => apiClient.get(`/users/${userId}`),\n  updateUser: (userId, userData) => apiClient.put(`/users/${userId}`, userData)\n};\nexport const postService = {\n  createPost: formData => {\n    console.log(\"Creating post with form data:\", formData);\n    // Set longer timeout for file uploads (60 seconds)\n    return axios.post(`${API_URL}/posts`, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      },\n      timeout: 60000,\n      onUploadProgress: progressEvent => {\n        // Optional progress tracking\n        const percentCompleted = Math.round(progressEvent.loaded * 100 / progressEvent.total);\n        console.log(`Upload progress: ${percentCompleted}%`);\n      }\n    });\n  },\n  // New method for creating posts with pre-uploaded media URLs\n  createPostWithUrls: postData => {\n    console.log(\"Creating post with URLs:\", postData);\n    return apiClient.post('/posts/with-urls', postData);\n  },\n  getAllPosts: () => apiClient.get('/posts'),\n  getUserPosts: userId => apiClient.get(`/posts/user/${userId}`),\n  getPost: postId => apiClient.get(`/posts/${postId}`),\n  deletePost: postId => apiClient.delete(`/posts/${postId}`)\n};\nexport default apiClient;","map":{"version":3,"names":["axios","API_URL","apiClient","create","baseURL","headers","interceptors","request","use","config","user","JSON","parse","localStorage","getItem","token","Authorization","error","Promise","reject","userService","register","userData","post","login","email","password","encodeURIComponent","getUser","userId","get","updateUser","put","postService","createPost","formData","console","log","timeout","onUploadProgress","progressEvent","percentCompleted","Math","round","loaded","total","createPostWithUrls","postData","getAllPosts","getUserPosts","getPost","postId","deletePost","delete"],"sources":["D:/Projects/PAF Project/ProLearnXGit/ProLearnX/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8080/api';\r\n\r\n// Create axios instance with base URL\r\nconst apiClient = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json'\r\n  }\r\n});\r\n\r\n// Add request interceptor to include auth token if available\r\napiClient.interceptors.request.use(\r\n  (config) => {\r\n    const user = JSON.parse(localStorage.getItem('user') || '{}');\r\n    if (user && user.token) {\r\n      config.headers.Authorization = `Bearer ${user.token}`;\r\n    }\r\n    return config;\r\n  },\r\n  (error) => Promise.reject(error)\r\n);\r\n\r\nexport const userService = {\r\n  register: (userData) => apiClient.post('/users/register', userData),\r\n  login: (email, password) => apiClient.post(`/users/login?email=${encodeURIComponent(email)}&password=${encodeURIComponent(password)}`),\r\n  getUser: (userId) => apiClient.get(`/users/${userId}`),\r\n  updateUser: (userId, userData) => apiClient.put(`/users/${userId}`, userData)\r\n};\r\n\r\nexport const postService = {\r\n  createPost: (formData) => {\r\n    console.log(\"Creating post with form data:\", formData);\r\n    // Set longer timeout for file uploads (60 seconds)\r\n    return axios.post(`${API_URL}/posts`, formData, {\r\n      headers: { \r\n        'Content-Type': 'multipart/form-data'\r\n      },\r\n      timeout: 60000,\r\n      onUploadProgress: (progressEvent) => {\r\n        // Optional progress tracking\r\n        const percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n        console.log(`Upload progress: ${percentCompleted}%`);\r\n      }\r\n    });\r\n  },\r\n  \r\n  // New method for creating posts with pre-uploaded media URLs\r\n  createPostWithUrls: (postData) => {\r\n    console.log(\"Creating post with URLs:\", postData);\r\n    return apiClient.post('/posts/with-urls', postData);\r\n  },\r\n  \r\n  getAllPosts: () => apiClient.get('/posts'),\r\n  getUserPosts: (userId) => apiClient.get(`/posts/user/${userId}`),\r\n  getPost: (postId) => apiClient.get(`/posts/${postId}`),\r\n  deletePost: (postId) => apiClient.delete(`/posts/${postId}`)\r\n};\r\n\r\nexport default apiClient;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;;AAE3C;AACA,MAAMC,SAAS,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC7BC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAH,SAAS,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC/BC,MAAM,IAAK;EACV,MAAMC,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC;EAC7D,IAAIJ,IAAI,IAAIA,IAAI,CAACK,KAAK,EAAE;IACtBN,MAAM,CAACJ,OAAO,CAACW,aAAa,GAAG,UAAUN,IAAI,CAACK,KAAK,EAAE;EACvD;EACA,OAAON,MAAM;AACf,CAAC,EACAQ,KAAK,IAAKC,OAAO,CAACC,MAAM,CAACF,KAAK,CACjC,CAAC;AAED,OAAO,MAAMG,WAAW,GAAG;EACzBC,QAAQ,EAAGC,QAAQ,IAAKpB,SAAS,CAACqB,IAAI,CAAC,iBAAiB,EAAED,QAAQ,CAAC;EACnEE,KAAK,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAKxB,SAAS,CAACqB,IAAI,CAAC,sBAAsBI,kBAAkB,CAACF,KAAK,CAAC,aAAaE,kBAAkB,CAACD,QAAQ,CAAC,EAAE,CAAC;EACtIE,OAAO,EAAGC,MAAM,IAAK3B,SAAS,CAAC4B,GAAG,CAAC,UAAUD,MAAM,EAAE,CAAC;EACtDE,UAAU,EAAEA,CAACF,MAAM,EAAEP,QAAQ,KAAKpB,SAAS,CAAC8B,GAAG,CAAC,UAAUH,MAAM,EAAE,EAAEP,QAAQ;AAC9E,CAAC;AAED,OAAO,MAAMW,WAAW,GAAG;EACzBC,UAAU,EAAGC,QAAQ,IAAK;IACxBC,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAEF,QAAQ,CAAC;IACtD;IACA,OAAOnC,KAAK,CAACuB,IAAI,CAAC,GAAGtB,OAAO,QAAQ,EAAEkC,QAAQ,EAAE;MAC9C9B,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDiC,OAAO,EAAE,KAAK;MACdC,gBAAgB,EAAGC,aAAa,IAAK;QACnC;QACA,MAAMC,gBAAgB,GAAGC,IAAI,CAACC,KAAK,CAAEH,aAAa,CAACI,MAAM,GAAG,GAAG,GAAIJ,aAAa,CAACK,KAAK,CAAC;QACvFT,OAAO,CAACC,GAAG,CAAC,oBAAoBI,gBAAgB,GAAG,CAAC;MACtD;IACF,CAAC,CAAC;EACJ,CAAC;EAED;EACAK,kBAAkB,EAAGC,QAAQ,IAAK;IAChCX,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEU,QAAQ,CAAC;IACjD,OAAO7C,SAAS,CAACqB,IAAI,CAAC,kBAAkB,EAAEwB,QAAQ,CAAC;EACrD,CAAC;EAEDC,WAAW,EAAEA,CAAA,KAAM9C,SAAS,CAAC4B,GAAG,CAAC,QAAQ,CAAC;EAC1CmB,YAAY,EAAGpB,MAAM,IAAK3B,SAAS,CAAC4B,GAAG,CAAC,eAAeD,MAAM,EAAE,CAAC;EAChEqB,OAAO,EAAGC,MAAM,IAAKjD,SAAS,CAAC4B,GAAG,CAAC,UAAUqB,MAAM,EAAE,CAAC;EACtDC,UAAU,EAAGD,MAAM,IAAKjD,SAAS,CAACmD,MAAM,CAAC,UAAUF,MAAM,EAAE;AAC7D,CAAC;AAED,eAAejD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}