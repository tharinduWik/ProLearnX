{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\PAF Project\\\\ProLearnXGit\\\\ProLearnX\\\\frontend\\\\src\\\\components\\\\posts\\\\CreatePost.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { Container, Row, Col, Card, Button, Form, Alert } from 'react-bootstrap';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { toast } from 'react-toastify';\nimport { AuthContext } from '../../context/AuthContext';\nimport { postService } from '../../services/api';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faUpload, faTrash, faSync } from '@fortawesome/free-solid-svg-icons';\nimport { storage } from '../../firebase/config';\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CreatePost = () => {\n  _s();\n  const {\n    currentUser\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [previews, setPreviews] = useState([]);\n  const [error, setError] = useState('');\n  const [isVideo, setIsVideo] = useState(false);\n  const [isUploading, setIsUploading] = useState(false);\n  const [uploadedMediaUrls, setUploadedMediaUrls] = useState([]);\n  const [step, setStep] = useState('upload'); // 'upload' or 'create'\n\n  const validationSchema = Yup.object({\n    description: Yup.string().required('Description is required'),\n    files: Yup.mixed().required('At least one file is required').test('fileCount', 'Maximum 3 files are allowed', value => value && value.length <= 3).test('fileSize', 'File size is too large', value => {\n      if (!value) return true;\n      return Array.from(value).every(file => file.size <= 50 * 1024 * 1024); // 50MB max\n    }).test('fileType', 'Unsupported file type', value => {\n      if (!value) return true;\n      return Array.from(value).every(file => file.type.startsWith('image/') || file.type.startsWith('video/'));\n    })\n  });\n  const uploadFileToFirebase = async file => {\n    try {\n      const mediaName = `post_${currentUser.id}_${Date.now()}_${file.name.replace(/[^a-zA-Z0-9._-]/g, '_')}`;\n      const storageRef = ref(storage, `postMedia/${mediaName}`);\n      await uploadBytes(storageRef, file);\n      const downloadUrl = await getDownloadURL(storageRef);\n      console.log('File uploaded successfully to Firebase:', downloadUrl);\n      return downloadUrl;\n    } catch (error) {\n      console.error('Firebase upload error:', error);\n      throw error;\n    }\n  };\n  const handleUploadMedia = async (values, {\n    setSubmitting\n  }) => {\n    setError('');\n    setIsUploading(true);\n    try {\n      const mediaUrls = [];\n      const mediaFiles = Array.from(values.files);\n      toast.info('Uploading files to storage...', {\n        autoClose: false,\n        toastId: 'uploading'\n      });\n      for (const file of mediaFiles) {\n        const url = await uploadFileToFirebase(file);\n        mediaUrls.push(url);\n      }\n      toast.dismiss('uploading');\n      toast.success('Files uploaded successfully!');\n      setUploadedMediaUrls(mediaUrls);\n      setStep('create');\n    } catch (err) {\n      console.error('Media upload error:', err);\n      if (err.code && err.code.startsWith('storage/')) {\n        setError(`Firebase Storage error: ${err.message}`);\n        toast.error('Storage upload failed');\n      } else {\n        setError(err.message || 'Failed to upload media. Please try again.');\n        toast.error('Failed to upload media');\n      }\n    } finally {\n      toast.dismiss('uploading');\n      setIsUploading(false);\n      setSubmitting(false);\n    }\n  };\n  const handleCreatePost = async values => {\n    setError('');\n    setIsUploading(true);\n    try {\n      const postData = {\n        userId: currentUser.id,\n        description: values.description,\n        isVideo: isVideo,\n        mediaUrls: uploadedMediaUrls\n      };\n      console.log(\"Creating post with data:\", postData);\n      toast.info('Saving post...', {\n        autoClose: false,\n        toastId: 'saving'\n      });\n      const response = await postService.createPostWithUrls(postData);\n      toast.dismiss('saving');\n      console.log(\"Server response:\", response.data);\n      toast.success('Post created successfully!');\n      navigate('/');\n    } catch (err) {\n      console.error('Post creation error:', err);\n      if (err.code === 'ECONNABORTED') {\n        setError('The server is taking too long to respond. Your media has been uploaded but the post could not be created.');\n        toast.error('Server timeout. Please try again to create your post with the uploaded media.');\n      } else if (err.response) {\n        const errorMessage = err.response.data || err.message;\n        setError(`Server error: ${err.response.status} - ${errorMessage}`);\n        if (errorMessage.includes('MongoDB') || errorMessage.includes('SSLException')) {\n          setError('Database connection error. Please try again later or contact support.');\n        }\n        toast.error(`Server error: ${err.response.status}`);\n      } else {\n        setError(err.message || 'Failed to create post. Please try again.');\n        toast.error('Failed to create post');\n      }\n    } finally {\n      toast.dismiss('saving');\n      setIsUploading(false);\n    }\n  };\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    if (step === 'upload') {\n      await handleUploadMedia(values, {\n        setSubmitting\n      });\n    } else {\n      await handleCreatePost(values);\n      setSubmitting(false);\n    }\n  };\n  const handleRetry = () => {\n    setError('');\n    setStep('upload');\n    setUploadedMediaUrls([]);\n  };\n  const handleFileChange = (event, setFieldValue) => {\n    const files = event.currentTarget.files;\n    const videoExists = Array.from(files).some(file => file.type.startsWith('video/'));\n    setIsVideo(videoExists);\n    if (files.length > 3) {\n      toast.error('You can only upload a maximum of 3 files');\n      return;\n    }\n    if (videoExists && Array.from(files).filter(file => file.type.startsWith('video/')).length > 1) {\n      toast.error('You can only upload one video');\n      return;\n    }\n    setFieldValue('files', files);\n    const fileArray = Array.from(files).map(file => ({\n      file,\n      preview: URL.createObjectURL(file),\n      type: file.type.startsWith('video/') ? 'video' : 'image'\n    }));\n    setPreviews(fileArray);\n    if (videoExists) {\n      const videoFile = Array.from(files).find(file => file.type.startsWith('video/'));\n      const videoElement = document.createElement('video');\n      videoElement.preload = 'metadata';\n      videoElement.onloadedmetadata = () => {\n        URL.revokeObjectURL(videoElement.src);\n        if (videoElement.duration > 30) {\n          toast.error('Video must be less than 30 seconds');\n          setFieldValue('files', null);\n          setPreviews([]);\n        }\n      };\n      videoElement.src = URL.createObjectURL(videoFile);\n    }\n  };\n  const removeFile = (index, setFieldValue, values) => {\n    const newFiles = Array.from(values.files).filter((_, i) => i !== index);\n    const newIsVideo = newFiles.some(file => file.type.startsWith('video/'));\n    setIsVideo(newIsVideo);\n    const dataTransfer = new DataTransfer();\n    newFiles.forEach(file => {\n      dataTransfer.items.add(file);\n    });\n    setFieldValue('files', dataTransfer.files);\n    setPreviews(previews.filter((_, i) => i !== index));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"shadow\",\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            className: \"bg-primary text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: step === 'upload' ? 'Upload Media' : 'Create Post'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), step === 'create' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-2 small\",\n              children: \"Media uploaded successfully! Now create your post.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [error && /*#__PURE__*/_jsxDEV(Alert, {\n              variant: \"danger\",\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: \"Error:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 22\n                }, this), \" \", error]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), (error.includes('Database connection') || error.includes('MongoDB')) && /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"mt-2 mb-0\",\n                children: /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"This appears to be a server database connection issue. Your media has been uploaded successfully. You can try again later using the same media.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 21\n              }, this), step === 'create' && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"outline-danger\",\n                size: \"sm\",\n                className: \"mt-2\",\n                onClick: handleRetry,\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faSync,\n                  className: \"me-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 23\n                }, this), \"Start Over\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Formik, {\n              initialValues: {\n                description: '',\n                files: null\n              },\n              validationSchema: validationSchema,\n              onSubmit: handleSubmit,\n              enableReinitialize: true,\n              children: ({\n                handleSubmit,\n                handleChange,\n                handleBlur,\n                values,\n                touched,\n                errors,\n                isSubmitting,\n                setFieldValue\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                noValidate: true,\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Description\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    rows: 3,\n                    name: \"description\",\n                    value: values.description,\n                    onChange: handleChange,\n                    onBlur: handleBlur,\n                    isInvalid: touched.description && !!errors.description,\n                    placeholder: \"Share your knowledge or learning experience...\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 283,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 21\n                }, this), step === 'upload' && /*#__PURE__*/_jsxDEV(Form.Group, {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Upload Media (Max 3 files, images or videos)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"file\",\n                    name: \"files\",\n                    onChange: e => handleFileChange(e, setFieldValue),\n                    onBlur: handleBlur,\n                    isInvalid: touched.files && !!errors.files,\n                    accept: \"image/*,video/*\",\n                    multiple: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                    type: \"invalid\",\n                    children: errors.files\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n                    className: \"text-muted\",\n                    children: \"You can upload up to 3 images, or 1 video (max 30 seconds)\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this), step === 'upload' && previews.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"Media Preview\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 321,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex flex-wrap gap-2\",\n                    children: previews.map((file, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"position-relative\",\n                      children: [file.type === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: file.preview,\n                        alt: `Preview ${index}`,\n                        style: {\n                          width: '150px',\n                          height: '150px',\n                          objectFit: 'cover'\n                        },\n                        className: \"rounded\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 326,\n                        columnNumber: 33\n                      }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n                        src: file.preview,\n                        style: {\n                          width: '150px',\n                          height: '150px',\n                          objectFit: 'cover'\n                        },\n                        className: \"rounded\",\n                        controls: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 333,\n                        columnNumber: 33\n                      }, this), /*#__PURE__*/_jsxDEV(Button, {\n                        variant: \"danger\",\n                        size: \"sm\",\n                        className: \"position-absolute top-0 end-0\",\n                        onClick: () => removeFile(index, setFieldValue, values),\n                        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                          icon: faTrash\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 346,\n                          columnNumber: 33\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 340,\n                        columnNumber: 31\n                      }, this)]\n                    }, index, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 23\n                }, this), step === 'create' && uploadedMediaUrls.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mb-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    children: \"Uploaded Media\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 356,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"d-flex flex-wrap gap-2\",\n                    children: uploadedMediaUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: isVideo ? /*#__PURE__*/_jsxDEV(\"video\", {\n                        src: url,\n                        style: {\n                          width: '150px',\n                          height: '150px',\n                          objectFit: 'cover'\n                        },\n                        className: \"rounded\",\n                        controls: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 361,\n                        columnNumber: 33\n                      }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n                        src: url,\n                        alt: `Uploaded ${index}`,\n                        style: {\n                          width: '150px',\n                          height: '150px',\n                          objectFit: 'cover'\n                        },\n                        className: \"rounded\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 368,\n                        columnNumber: 33\n                      }, this)\n                    }, index, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 359,\n                      columnNumber: 29\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 357,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 355,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-grid\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    type: \"submit\",\n                    disabled: isSubmitting || isUploading,\n                    className: \"mt-3\",\n                    children: isSubmitting || isUploading ? step === 'upload' ? 'Uploading...' : 'Creating Post...' : /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: step === 'upload' ? faUpload : faSync,\n                        className: \"me-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 392,\n                        columnNumber: 29\n                      }, this), step === 'upload' ? 'Upload Media' : 'Create Post']\n                    }, void 0, true)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n};\n_s(CreatePost, \"N5N4fJnghFtom9UpfOjdI2WUnrk=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePost;\nexport default CreatePost;\nvar _c;\n$RefreshReg$(_c, \"CreatePost\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","Container","Row","Col","Card","Button","Form","Alert","Formik","Yup","toast","AuthContext","postService","FontAwesomeIcon","faUpload","faTrash","faSync","storage","ref","uploadBytes","getDownloadURL","jsxDEV","_jsxDEV","Fragment","_Fragment","CreatePost","_s","currentUser","navigate","previews","setPreviews","error","setError","isVideo","setIsVideo","isUploading","setIsUploading","uploadedMediaUrls","setUploadedMediaUrls","step","setStep","validationSchema","object","description","string","required","files","mixed","test","value","length","Array","from","every","file","size","type","startsWith","uploadFileToFirebase","mediaName","id","Date","now","name","replace","storageRef","downloadUrl","console","log","handleUploadMedia","values","setSubmitting","mediaUrls","mediaFiles","info","autoClose","toastId","url","push","dismiss","success","err","code","message","handleCreatePost","postData","userId","response","createPostWithUrls","data","errorMessage","status","includes","handleSubmit","handleRetry","handleFileChange","event","setFieldValue","currentTarget","videoExists","some","filter","fileArray","map","preview","URL","createObjectURL","videoFile","find","videoElement","document","createElement","preload","onloadedmetadata","revokeObjectURL","src","duration","removeFile","index","newFiles","_","i","newIsVideo","dataTransfer","DataTransfer","forEach","items","add","children","className","md","Header","fileName","_jsxFileName","lineNumber","columnNumber","Body","variant","onClick","icon","initialValues","onSubmit","enableReinitialize","handleChange","handleBlur","touched","errors","isSubmitting","noValidate","Group","Label","Control","as","rows","onChange","onBlur","isInvalid","placeholder","Feedback","e","accept","multiple","Text","alt","style","width","height","objectFit","controls","disabled","_c","$RefreshReg$"],"sources":["D:/Projects/PAF Project/ProLearnXGit/ProLearnX/frontend/src/components/posts/CreatePost.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Container, Row, Col, Card, Button, Form, Alert } from 'react-bootstrap';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { toast } from 'react-toastify';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { postService } from '../../services/api';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUpload, faTrash, faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport { storage } from '../../firebase/config';\r\nimport { ref, uploadBytes, getDownloadURL } from 'firebase/storage';\r\n\r\nconst CreatePost = () => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const navigate = useNavigate();\r\n  const [previews, setPreviews] = useState([]);\r\n  const [error, setError] = useState('');\r\n  const [isVideo, setIsVideo] = useState(false);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [uploadedMediaUrls, setUploadedMediaUrls] = useState([]);\r\n  const [step, setStep] = useState('upload'); // 'upload' or 'create'\r\n\r\n  const validationSchema = Yup.object({\r\n    description: Yup.string().required('Description is required'),\r\n    files: Yup.mixed()\r\n      .required('At least one file is required')\r\n      .test(\r\n        'fileCount',\r\n        'Maximum 3 files are allowed',\r\n        value => value && value.length <= 3\r\n      )\r\n      .test(\r\n        'fileSize',\r\n        'File size is too large',\r\n        value => {\r\n          if (!value) return true;\r\n          return Array.from(value).every(file => file.size <= 50 * 1024 * 1024); // 50MB max\r\n        }\r\n      )\r\n      .test(\r\n        'fileType',\r\n        'Unsupported file type',\r\n        value => {\r\n          if (!value) return true;\r\n          return Array.from(value).every(\r\n            file => file.type.startsWith('image/') || file.type.startsWith('video/')\r\n          );\r\n        }\r\n      )\r\n  });\r\n\r\n  const uploadFileToFirebase = async (file) => {\r\n    try {\r\n      const mediaName = `post_${currentUser.id}_${Date.now()}_${file.name.replace(/[^a-zA-Z0-9._-]/g, '_')}`;\r\n      const storageRef = ref(storage, `postMedia/${mediaName}`);\r\n      \r\n      await uploadBytes(storageRef, file);\r\n      const downloadUrl = await getDownloadURL(storageRef);\r\n      \r\n      console.log('File uploaded successfully to Firebase:', downloadUrl);\r\n      return downloadUrl;\r\n    } catch (error) {\r\n      console.error('Firebase upload error:', error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  const handleUploadMedia = async (values, { setSubmitting }) => {\r\n    setError('');\r\n    setIsUploading(true);\r\n    \r\n    try {\r\n      const mediaUrls = [];\r\n      const mediaFiles = Array.from(values.files);\r\n      \r\n      toast.info('Uploading files to storage...', { autoClose: false, toastId: 'uploading' });\r\n      \r\n      for (const file of mediaFiles) {\r\n        const url = await uploadFileToFirebase(file);\r\n        mediaUrls.push(url);\r\n      }\r\n      \r\n      toast.dismiss('uploading');\r\n      toast.success('Files uploaded successfully!');\r\n      \r\n      setUploadedMediaUrls(mediaUrls);\r\n      setStep('create');\r\n    } catch (err) {\r\n      console.error('Media upload error:', err);\r\n      \r\n      if (err.code && err.code.startsWith('storage/')) {\r\n        setError(`Firebase Storage error: ${err.message}`);\r\n        toast.error('Storage upload failed');\r\n      } else {\r\n        setError(err.message || 'Failed to upload media. Please try again.');\r\n        toast.error('Failed to upload media');\r\n      }\r\n    } finally {\r\n      toast.dismiss('uploading');\r\n      setIsUploading(false);\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleCreatePost = async (values) => {\r\n    setError('');\r\n    setIsUploading(true);\r\n    \r\n    try {\r\n      const postData = {\r\n        userId: currentUser.id,\r\n        description: values.description,\r\n        isVideo: isVideo,\r\n        mediaUrls: uploadedMediaUrls\r\n      };\r\n      \r\n      console.log(\"Creating post with data:\", postData);\r\n      toast.info('Saving post...', { autoClose: false, toastId: 'saving' });\r\n      \r\n      const response = await postService.createPostWithUrls(postData);\r\n      \r\n      toast.dismiss('saving');\r\n      console.log(\"Server response:\", response.data);\r\n      toast.success('Post created successfully!');\r\n      navigate('/');\r\n    } catch (err) {\r\n      console.error('Post creation error:', err);\r\n      \r\n      if (err.code === 'ECONNABORTED') {\r\n        setError('The server is taking too long to respond. Your media has been uploaded but the post could not be created.');\r\n        toast.error('Server timeout. Please try again to create your post with the uploaded media.');\r\n      } else if (err.response) {\r\n        const errorMessage = err.response.data || err.message;\r\n        setError(`Server error: ${err.response.status} - ${errorMessage}`);\r\n        \r\n        if (errorMessage.includes('MongoDB') || errorMessage.includes('SSLException')) {\r\n          setError('Database connection error. Please try again later or contact support.');\r\n        }\r\n        \r\n        toast.error(`Server error: ${err.response.status}`);\r\n      } else {\r\n        setError(err.message || 'Failed to create post. Please try again.');\r\n        toast.error('Failed to create post');\r\n      }\r\n    } finally {\r\n      toast.dismiss('saving');\r\n      setIsUploading(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (values, { setSubmitting }) => {\r\n    if (step === 'upload') {\r\n      await handleUploadMedia(values, { setSubmitting });\r\n    } else {\r\n      await handleCreatePost(values);\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  const handleRetry = () => {\r\n    setError('');\r\n    setStep('upload');\r\n    setUploadedMediaUrls([]);\r\n  };\r\n\r\n  const handleFileChange = (event, setFieldValue) => {\r\n    const files = event.currentTarget.files;\r\n    \r\n    const videoExists = Array.from(files).some(file => file.type.startsWith('video/'));\r\n    setIsVideo(videoExists);\r\n    \r\n    if (files.length > 3) {\r\n      toast.error('You can only upload a maximum of 3 files');\r\n      return;\r\n    }\r\n    \r\n    if (videoExists && Array.from(files).filter(file => file.type.startsWith('video/')).length > 1) {\r\n      toast.error('You can only upload one video');\r\n      return;\r\n    }\r\n    \r\n    setFieldValue('files', files);\r\n    \r\n    const fileArray = Array.from(files).map(file => ({\r\n      file,\r\n      preview: URL.createObjectURL(file),\r\n      type: file.type.startsWith('video/') ? 'video' : 'image'\r\n    }));\r\n    \r\n    setPreviews(fileArray);\r\n    \r\n    if (videoExists) {\r\n      const videoFile = Array.from(files).find(file => file.type.startsWith('video/'));\r\n      const videoElement = document.createElement('video');\r\n      videoElement.preload = 'metadata';\r\n      \r\n      videoElement.onloadedmetadata = () => {\r\n        URL.revokeObjectURL(videoElement.src);\r\n        if (videoElement.duration > 30) {\r\n          toast.error('Video must be less than 30 seconds');\r\n          setFieldValue('files', null);\r\n          setPreviews([]);\r\n        }\r\n      };\r\n      \r\n      videoElement.src = URL.createObjectURL(videoFile);\r\n    }\r\n  };\r\n  \r\n  const removeFile = (index, setFieldValue, values) => {\r\n    const newFiles = Array.from(values.files).filter((_, i) => i !== index);\r\n    \r\n    const newIsVideo = newFiles.some(file => file.type.startsWith('video/'));\r\n    setIsVideo(newIsVideo);\r\n    \r\n    const dataTransfer = new DataTransfer();\r\n    newFiles.forEach(file => {\r\n      dataTransfer.items.add(file);\r\n    });\r\n    \r\n    setFieldValue('files', dataTransfer.files);\r\n    \r\n    setPreviews(previews.filter((_, i) => i !== index));\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Row className=\"justify-content-center\">\r\n        <Col md={8}>\r\n          <Card className=\"shadow\">\r\n            <Card.Header className=\"bg-primary text-white\">\r\n              <h3>{step === 'upload' ? 'Upload Media' : 'Create Post'}</h3>\r\n              {step === 'create' && (\r\n                <div className=\"mt-2 small\">\r\n                  Media uploaded successfully! Now create your post.\r\n                </div>\r\n              )}\r\n            </Card.Header>\r\n            <Card.Body>\r\n              {error && (\r\n                <Alert variant=\"danger\">\r\n                  <p><strong>Error:</strong> {error}</p>\r\n                  {(error.includes('Database connection') || error.includes('MongoDB')) && (\r\n                    <p className=\"mt-2 mb-0\">\r\n                      <small>This appears to be a server database connection issue. Your media has been uploaded successfully.\r\n                      You can try again later using the same media.</small>\r\n                    </p>\r\n                  )}\r\n                  {step === 'create' && (\r\n                    <Button \r\n                      variant=\"outline-danger\" \r\n                      size=\"sm\" \r\n                      className=\"mt-2\"\r\n                      onClick={handleRetry}\r\n                    >\r\n                      <FontAwesomeIcon icon={faSync} className=\"me-1\" />\r\n                      Start Over\r\n                    </Button>\r\n                  )}\r\n                </Alert>\r\n              )}\r\n              \r\n              <Formik\r\n                initialValues={{ description: '', files: null }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={handleSubmit}\r\n                enableReinitialize={true}\r\n              >\r\n                {({\r\n                  handleSubmit,\r\n                  handleChange,\r\n                  handleBlur,\r\n                  values,\r\n                  touched,\r\n                  errors,\r\n                  isSubmitting,\r\n                  setFieldValue\r\n                }) => (\r\n                  <Form noValidate onSubmit={handleSubmit}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>Description</Form.Label>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                        name=\"description\"\r\n                        value={values.description}\r\n                        onChange={handleChange}\r\n                        onBlur={handleBlur}\r\n                        isInvalid={touched.description && !!errors.description}\r\n                        placeholder=\"Share your knowledge or learning experience...\"\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {errors.description}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    \r\n                    {step === 'upload' && (\r\n                      <Form.Group className=\"mb-3\">\r\n                        <Form.Label>Upload Media (Max 3 files, images or videos)</Form.Label>\r\n                        <Form.Control\r\n                          type=\"file\"\r\n                          name=\"files\"\r\n                          onChange={(e) => handleFileChange(e, setFieldValue)}\r\n                          onBlur={handleBlur}\r\n                          isInvalid={touched.files && !!errors.files}\r\n                          accept=\"image/*,video/*\"\r\n                          multiple\r\n                        />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                          {errors.files}\r\n                        </Form.Control.Feedback>\r\n                        <Form.Text className=\"text-muted\">\r\n                          You can upload up to 3 images, or 1 video (max 30 seconds)\r\n                        </Form.Text>\r\n                      </Form.Group>\r\n                    )}\r\n                    \r\n                    {step === 'upload' && previews.length > 0 && (\r\n                      <div className=\"mb-3\">\r\n                        <h5>Media Preview</h5>\r\n                        <div className=\"d-flex flex-wrap gap-2\">\r\n                          {previews.map((file, index) => (\r\n                            <div key={index} className=\"position-relative\">\r\n                              {file.type === 'image' ? (\r\n                                <img \r\n                                  src={file.preview} \r\n                                  alt={`Preview ${index}`} \r\n                                  style={{ width: '150px', height: '150px', objectFit: 'cover' }}\r\n                                  className=\"rounded\"\r\n                                />\r\n                              ) : (\r\n                                <video \r\n                                  src={file.preview} \r\n                                  style={{ width: '150px', height: '150px', objectFit: 'cover' }}\r\n                                  className=\"rounded\"\r\n                                  controls\r\n                                />\r\n                              )}\r\n                              <Button \r\n                                variant=\"danger\" \r\n                                size=\"sm\" \r\n                                className=\"position-absolute top-0 end-0\"\r\n                                onClick={() => removeFile(index, setFieldValue, values)}\r\n                              >\r\n                                <FontAwesomeIcon icon={faTrash} />\r\n                              </Button>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    \r\n                    {step === 'create' && uploadedMediaUrls.length > 0 && (\r\n                      <div className=\"mb-3\">\r\n                        <h5>Uploaded Media</h5>\r\n                        <div className=\"d-flex flex-wrap gap-2\">\r\n                          {uploadedMediaUrls.map((url, index) => (\r\n                            <div key={index}>\r\n                              {isVideo ? (\r\n                                <video \r\n                                  src={url} \r\n                                  style={{ width: '150px', height: '150px', objectFit: 'cover' }}\r\n                                  className=\"rounded\"\r\n                                  controls\r\n                                />\r\n                              ) : (\r\n                                <img \r\n                                  src={url} \r\n                                  alt={`Uploaded ${index}`} \r\n                                  style={{ width: '150px', height: '150px', objectFit: 'cover' }}\r\n                                  className=\"rounded\"\r\n                                />\r\n                              )}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                    \r\n                    <div className=\"d-grid\">\r\n                      <Button \r\n                        variant=\"primary\" \r\n                        type=\"submit\" \r\n                        disabled={isSubmitting || isUploading}\r\n                        className=\"mt-3\"\r\n                      >\r\n                        {isSubmitting || isUploading ? (\r\n                          step === 'upload' ? 'Uploading...' : 'Creating Post...'\r\n                        ) : (\r\n                          <>\r\n                            <FontAwesomeIcon icon={step === 'upload' ? faUpload : faSync} className=\"me-2\" />\r\n                            {step === 'upload' ? 'Upload Media' : 'Create Post'}\r\n                          </>\r\n                        )}\r\n                      </Button>\r\n                    </div>\r\n                  </Form>\r\n                )}\r\n              </Formik>\r\n            </Card.Body>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CreatePost;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}